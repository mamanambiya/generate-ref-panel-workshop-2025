name: Build and Push Docker Image

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/docker-build.yml'
  release:
    types: [ published ]
  workflow_dispatch:  # Allow manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/prepare-minimac4-data

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # set latest tag for default branch
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
          # GA4GH Hackathon 2025 specific tag
          type=raw,value=ga4gh-hackathon-2025
        labels: |
          org.opencontainers.image.title=Prepare Minimac4 Data Container
          org.opencontainers.image.description=Docker image for bcftools and Minimac4 used in data preparation
          org.opencontainers.image.vendor=GA4GH Hackathon 2025
          org.opencontainers.image.documentation=https://github.com/${{ github.repository }}
          org.opencontainers.image.source=https://github.com/${{ github.repository }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image (amd64)
      if: github.event_name != 'pull_request'
      run: |
        # Only pull if on main branch (where image was pushed)
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        else
          # On develop/feature branches, use the locally built image
          IMAGE="${{ steps.build.outputs.imageid }}"
          echo "Using locally built image: $IMAGE"
        fi
        
        echo "Testing bcftools..."
        docker run --rm --platform linux/amd64 $IMAGE bcftools --version
        echo "Testing minimac4..."
        docker run --rm --platform linux/amd64 $IMAGE minimac4 --help | head -5
        echo "Testing bgzip..."
        docker run --rm --platform linux/amd64 $IMAGE bgzip -h | head -3

    - name: Update container documentation
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
      run: |
        echo "âœ… Docker image built and pushed successfully!"
        echo "ðŸ“¦ Available at: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        echo "ðŸ”— Pull command: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        echo "ðŸ§¬ Ready for GA4GH Hackathon 2025!"

    - name: Security scan
      if: github.event_name != 'pull_request'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ github.ref == 'refs/heads/main' && format('{0}/{1}:latest', env.REGISTRY, env.IMAGE_NAME) || steps.build.outputs.imageid }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      if: github.event_name != 'pull_request'
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif' 