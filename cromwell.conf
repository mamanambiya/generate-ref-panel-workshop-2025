# Cromwell Configuration for Multi-Platform Docker Support
# GA4GH Hackathon 2025 - African Genomics Team

include required(classpath("application"))

# Backend configurations
backend {
  default = "Local"
  
  providers {
    Local {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        # Local execution with Docker platform support
        runtime-attributes = """
          String? docker
          String? docker_user
          String? memory
          String? cpu
          Int? disk
          Boolean? privileged
          String? docker_args
        """
        
        submit = "/bin/bash ${script}"
        submit-docker = """
          # Handle platform-specific Docker arguments automatically
          DOCKER_ARGS="${docker_args}"
          
          # Auto-detect platform issues and add --platform if needed
          if [[ "$OSTYPE" == "darwin"* ]] && [[ "$(uname -m)" == "arm64" ]]; then
            # Running on Apple Silicon - add platform arg if not already present
            if [[ "$DOCKER_ARGS" != *"--platform"* ]]; then
              DOCKER_ARGS="--platform linux/amd64 $DOCKER_ARGS"
            fi
          fi
          
          # Remove any empty docker_args
          DOCKER_ARGS=$(echo $DOCKER_ARGS | sed 's/^[[:space:]]*$//')
          
          docker run \
            --rm -i \
            $DOCKER_ARGS \
            --entrypoint ${job_shell} \
            -v ${cwd}:${docker_cwd} \
            ${docker} ${docker_script}
        """
        
        # Default Docker arguments for all containers
        default-runtime-attributes {
          docker_args: ""
        }
      }
    }
    
    # Azure Backend with automatic platform handling
    Azure {
      actor-factory = "cromwell.backend.impl.azure.AzureBatchBackendLifecycleActorFactory"
      config {
        # Azure-specific settings - no platform args needed
        runtime-attributes = """
          String? docker
          String? memory
          String? cpu
          Int? disk
          String? docker_args
        """
        
        # Remove platform arguments for Azure to avoid ExitCode 10
        submit-docker = """
          # Strip platform arguments for Azure Batch compatibility
          CLEAN_ARGS=$(echo "${docker_args}" | sed 's/--platform[[:space:]]*[^[:space:]]*//')
          
          # Standard Azure Batch Docker execution (no platform args)
          docker run \
            --rm -i \
            $CLEAN_ARGS \
            --entrypoint ${job_shell} \
            -v ${cwd}:${docker_cwd} \
            ${docker} ${docker_script}
        """
      }
    }
  }
}

# Database configuration
database {
  profile = "slick.jdbc.HsqldbProfile$"
  db {
    driver = "org.hsqldb.jdbcDriver"
    url = "jdbc:hsqldb:mem:cromwell-db;shutdown=true;hsqldb.tx=mvcc"
    connectionTimeout = 1000
    numThreads = 1
  }
}

# Workflow options
workflow-options {
  # Automatically set Docker platform for local execution
  workflow-log-dir = "cromwell-workflow-logs"
  workflow-log-temporary = false
}

# System settings
system {
  # Auto-platform detection
  environment-detection = true
  
  # Docker platform override via environment variable
  docker-platform-override = ${?CROMWELL_DOCKER_PLATFORM}
}

# Call caching (optional)
call-caching {
  enabled = false
  invalidate-bad-cache-results = true
} 